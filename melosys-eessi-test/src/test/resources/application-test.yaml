server:
  port: 8081

# Integrations
EUXAPP_URL: dummy
RESTSTS_URL: dummy
STS_URL: dummy
DOKKATTYPEINFO_URL: dummy
DOKKATTYPEID_URL: dummy
SAK_URL: dummy
AKTOER_URL: dummy
PERSON_URL: dummy
PERSONSOK_URL: dummy
JOURNALPOSTAPI_URL: dummy
OPPGAVE_URL: dummy
RINA_HOST_URL: dummy
SRV_USERNAME: dummy
SRV_PASSWORD: dummy
EUXCASESTORE_URL: dummy
SAF_URL: dummy

# Database
PG_HOST: localhost
DATABASE_NAME: postgres

KAFKA_SEDHENDELSER_GROUPID: melosys-eessi-sedHendelser-local
KAFKA_EESSIMELDING_TOPIC: privat-melosys-eessi-v1-local

spring.datasource:
  username: postgres
  password: su

spring.jpa:
  hibernate:
    ddl-auto: none
    use-new-id-generator-mappings: true
  database-platform: org.hibernate.dialect.PostgreSQL95Dialect
  show-sql: false
  properties:
    hibernate:
      default_schema: PUBLIC
      format_sql: true
      jdbc.lob.non_contextual_creation: true
    jadira.usertype.autoRegisterUserTypes: true

spring:
  application:
    name: melosys-eessi
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

    bootstrap-servers: localhost:${kafkaPort}
    properties:
      schema.registry.url: dummy
      reconnect.backoff.ms: 1000
      ssl:
        truststore.location:
        truststore.password:
        protocol: PLAINTEXT
      security.protocol: PLAINTEXT

#no.nav.security.jwt.issuer:
#          isso:
#            discoveryurl: http://localhost:${mock-oauth2-server.port}/issuer1/.well-known/openid-configuration
#            acceptedaudience: someaudience
no.nav.security.jwt.issuer:
          isso:
            discoveryurl: http://localhost:${mock-oauth2-server.port}/issuer1/.well-known/openid-configuration
            acceptedaudience: dumbdumb
