// Generated by delombok at Thu Jul 04 12:27:09 CEST 2024
package no.nav.melosys.eessi.models.sed.nav;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;

@JsonIgnoreProperties(ignoreUnknown = true)
public class Sak {
    private X001Anmodning anmodning;
    private Kontekst kontekst;
    private X006FjernInstitusjon fjerninstitusjon;
    private Ugyldiggjoere ugyldiggjoere;

    @java.lang.SuppressWarnings("all")
    public Sak() {
    }

    @java.lang.SuppressWarnings("all")
    public X001Anmodning getAnmodning() {
        return this.anmodning;
    }

    @java.lang.SuppressWarnings("all")
    public Kontekst getKontekst() {
        return this.kontekst;
    }

    @java.lang.SuppressWarnings("all")
    public X006FjernInstitusjon getFjerninstitusjon() {
        return this.fjerninstitusjon;
    }

    @java.lang.SuppressWarnings("all")
    public Ugyldiggjoere getUgyldiggjoere() {
        return this.ugyldiggjoere;
    }

    @java.lang.SuppressWarnings("all")
    public void setAnmodning(final X001Anmodning anmodning) {
        this.anmodning = anmodning;
    }

    @java.lang.SuppressWarnings("all")
    public void setKontekst(final Kontekst kontekst) {
        this.kontekst = kontekst;
    }

    @java.lang.SuppressWarnings("all")
    public void setFjerninstitusjon(final X006FjernInstitusjon fjerninstitusjon) {
        this.fjerninstitusjon = fjerninstitusjon;
    }

    @java.lang.SuppressWarnings("all")
    public void setUgyldiggjoere(final Ugyldiggjoere ugyldiggjoere) {
        this.ugyldiggjoere = ugyldiggjoere;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof Sak)) return false;
        final Sak other = (Sak) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$anmodning = this.getAnmodning();
        final java.lang.Object other$anmodning = other.getAnmodning();
        if (this$anmodning == null ? other$anmodning != null : !this$anmodning.equals(other$anmodning)) return false;
        final java.lang.Object this$kontekst = this.getKontekst();
        final java.lang.Object other$kontekst = other.getKontekst();
        if (this$kontekst == null ? other$kontekst != null : !this$kontekst.equals(other$kontekst)) return false;
        final java.lang.Object this$fjerninstitusjon = this.getFjerninstitusjon();
        final java.lang.Object other$fjerninstitusjon = other.getFjerninstitusjon();
        if (this$fjerninstitusjon == null ? other$fjerninstitusjon != null : !this$fjerninstitusjon.equals(other$fjerninstitusjon)) return false;
        final java.lang.Object this$ugyldiggjoere = this.getUgyldiggjoere();
        final java.lang.Object other$ugyldiggjoere = other.getUgyldiggjoere();
        if (this$ugyldiggjoere == null ? other$ugyldiggjoere != null : !this$ugyldiggjoere.equals(other$ugyldiggjoere)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof Sak;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $anmodning = this.getAnmodning();
        result = result * PRIME + ($anmodning == null ? 43 : $anmodning.hashCode());
        final java.lang.Object $kontekst = this.getKontekst();
        result = result * PRIME + ($kontekst == null ? 43 : $kontekst.hashCode());
        final java.lang.Object $fjerninstitusjon = this.getFjerninstitusjon();
        result = result * PRIME + ($fjerninstitusjon == null ? 43 : $fjerninstitusjon.hashCode());
        final java.lang.Object $ugyldiggjoere = this.getUgyldiggjoere();
        result = result * PRIME + ($ugyldiggjoere == null ? 43 : $ugyldiggjoere.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "Sak(anmodning=" + this.getAnmodning() + ", kontekst=" + this.getKontekst() + ", fjerninstitusjon=" + this.getFjerninstitusjon() + ", ugyldiggjoere=" + this.getUgyldiggjoere() + ")";
    }
}
