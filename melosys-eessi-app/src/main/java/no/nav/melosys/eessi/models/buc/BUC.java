// Generated by delombok at Thu Jul 04 12:27:09 CEST 2024
package no.nav.melosys.eessi.models.buc;

import java.time.ZonedDateTime;
import java.util.*;
import java.util.function.Predicate;
import java.util.stream.Collectors;
import java.util.stream.Stream;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import no.nav.melosys.eessi.controller.dto.SedStatus;
import no.nav.melosys.eessi.models.BucType;
import no.nav.melosys.eessi.models.SedType;

@JsonIgnoreProperties(ignoreUnknown = true)
public class BUC {
    private String id;
    private ZonedDateTime startDate;
    private ZonedDateTime lastUpdate;
    private String status;
    private Creator creator;
    private List<Document> documents = new ArrayList<>();
    private List<Action> actions = new ArrayList<>();
    @JsonProperty("processDefinitionName")
    private String bucType;
    @JsonProperty("processDefinitionVersion")
    private String bucVersjon;
    private Collection<Participant> participants = new ArrayList<>();
    private String internationalId;
    private static final Comparator<Document> sistOppdatert = Comparator.comparing(Document::getLastUpdate);
    private static final Comparator<Document> sorterEtterStatus = Comparator.comparing(document -> SedStatus.fraEngelskStatus(document.getStatus()));

    public String hentAvsenderLand() {
        return creator.getOrganisation().getCountryCode();
    }

    public boolean kanOppretteEllerOppdatereSed(SedType sedType) {
        return actions.stream().filter(a -> sedType.name().equalsIgnoreCase(a.getDocumentType())).anyMatch(action -> "CREATE".equalsIgnoreCase(action.getOperation()) || "UPDATE".equalsIgnoreCase(action.getOperation()));
    }

    public Document hentDokument(String dokumentID) {
        return documents.stream().filter(d -> d.getId().equalsIgnoreCase(dokumentID)).findAny().orElseThrow();
    }

    public Optional<Document> hentSistOppdaterteDocument() {
        return documents.stream().filter(d -> SedStatus.erGyldigEngelskStatus(d.getStatus())).max(sistOppdatert);
    }

    public boolean erÅpen() {
        return !"closed".equalsIgnoreCase(status);
    }

    public Optional<Document> finnDokumentVedSedType(String sedType) {
        return finnDokumenterVedSedType(sedType).min(sorterEtterStatus);
    }

    private Stream<Document> finnDokumenterVedSedType(String sedType) {
        return documents.stream().filter(d -> sedType.equals(d.getType()));
    }

    public Optional<Document> finnDokumentVedTypeOgStatus(SedType sedType, SedStatus status) {
        return finnDokumenterVedSedType(sedType.name()).filter(d -> status.getEngelskStatus().equals(d.getStatus())).findFirst();
    }

    public boolean sedKanOppdateres(String id) {
        return actions.stream().filter(action -> id.equals(action.getDocumentId())).anyMatch(action -> "Update".equalsIgnoreCase(action.getOperation()));
    }

    public boolean harMottattSedTypeAntallDagerSiden(SedType sedType, long minstAntallDagerSidenMottatt) {
        return finnDokumentVedTypeOgStatus(sedType, SedStatus.MOTTATT).filter(d -> d.erAntallDagerSidenOppdatering(minstAntallDagerSidenMottatt)).isPresent();
    }

    public boolean harSendtSedTypeAntallDagerSiden(SedType sedType, long minstAntallDagerSidenMottatt) {
        return finnDokumentVedTypeOgStatus(sedType, SedStatus.SENDT).filter(d -> d.erAntallDagerSidenOppdatering(minstAntallDagerSidenMottatt)).isPresent();
    }

    public boolean kanLukkesAutomatisk() {
        var bucTypeEnum = BucType.valueOf(getBucType());
        if (bucTypeEnum == BucType.LA_BUC_06) {
            return harMottattSedTypeAntallDagerSiden(SedType.A006, 30) && kanOppretteEllerOppdatereSed(SedType.X001);
        } else if (bucTypeEnum == BucType.LA_BUC_01) {
            boolean harMottattA002EllerA011 = harMottattSedTypeAntallDagerSiden(SedType.A002, 60) || harMottattSedTypeAntallDagerSiden(SedType.A011, 60);
            return harMottattA002EllerA011 && kanOppretteEllerOppdatereSed(SedType.X001) && finnSistMottattSED(Document::erLovvalgSED).map(d -> d.erAntallDagerSidenOppdatering(60)).orElse(false);
        } else if (bucTypeEnum == BucType.LA_BUC_03) {
            boolean harMottattX012EllerSendtX013EllerA008 = (finnDokumentVedTypeOgStatus(SedType.X012, SedStatus.MOTTATT).isEmpty() || harMottattSedTypeAntallDagerSiden(SedType.X012, 30)) && (finnDokumentVedTypeOgStatus(SedType.X013, SedStatus.SENDT).isEmpty() || harSendtSedTypeAntallDagerSiden(SedType.X013, 30)) && harSendtSedTypeAntallDagerSiden(SedType.A008, 30);
            return harMottattX012EllerSendtX013EllerA008 && kanOppretteEllerOppdatereSed(SedType.X001);
        }
        return kanOppretteEllerOppdatereSed(SedType.X001);
    }

    private Optional<Document> finnSistMottattSED(Predicate<Document> documentPredicate) {
        return documents.stream().filter(Document::erInngående).filter(Document::erOpprettet).filter(documentPredicate).max(Comparator.comparing(Document::getLastUpdate));
    }

    public Optional<Document> finnFørstMottatteSed() {
        return documents.stream().filter(Document::erInngående).filter(Document::erOpprettet).filter(Document::erIkkeX100).min(Comparator.comparing(Document::getCreationDate));
    }

    public Set<String> hentMottakere() {
        return participants.stream().filter(Participant::erMotpart).map(p -> p.getOrganisation().getId()).collect(Collectors.toSet());
    }

    @java.lang.SuppressWarnings("all")
    public BUC() {
    }

    @java.lang.SuppressWarnings("all")
    public String getId() {
        return this.id;
    }

    @java.lang.SuppressWarnings("all")
    public ZonedDateTime getStartDate() {
        return this.startDate;
    }

    @java.lang.SuppressWarnings("all")
    public ZonedDateTime getLastUpdate() {
        return this.lastUpdate;
    }

    @java.lang.SuppressWarnings("all")
    public String getStatus() {
        return this.status;
    }

    @java.lang.SuppressWarnings("all")
    public Creator getCreator() {
        return this.creator;
    }

    @java.lang.SuppressWarnings("all")
    public List<Document> getDocuments() {
        return this.documents;
    }

    @java.lang.SuppressWarnings("all")
    public List<Action> getActions() {
        return this.actions;
    }

    @java.lang.SuppressWarnings("all")
    public String getBucType() {
        return this.bucType;
    }

    @java.lang.SuppressWarnings("all")
    public String getBucVersjon() {
        return this.bucVersjon;
    }

    @java.lang.SuppressWarnings("all")
    public Collection<Participant> getParticipants() {
        return this.participants;
    }

    @java.lang.SuppressWarnings("all")
    public String getInternationalId() {
        return this.internationalId;
    }

    @java.lang.SuppressWarnings("all")
    public void setId(final String id) {
        this.id = id;
    }

    @java.lang.SuppressWarnings("all")
    public void setStartDate(final ZonedDateTime startDate) {
        this.startDate = startDate;
    }

    @java.lang.SuppressWarnings("all")
    public void setLastUpdate(final ZonedDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    @java.lang.SuppressWarnings("all")
    public void setStatus(final String status) {
        this.status = status;
    }

    @java.lang.SuppressWarnings("all")
    public void setCreator(final Creator creator) {
        this.creator = creator;
    }

    @java.lang.SuppressWarnings("all")
    public void setDocuments(final List<Document> documents) {
        this.documents = documents;
    }

    @java.lang.SuppressWarnings("all")
    public void setActions(final List<Action> actions) {
        this.actions = actions;
    }

    @JsonProperty("processDefinitionName")
    @java.lang.SuppressWarnings("all")
    public void setBucType(final String bucType) {
        this.bucType = bucType;
    }

    @JsonProperty("processDefinitionVersion")
    @java.lang.SuppressWarnings("all")
    public void setBucVersjon(final String bucVersjon) {
        this.bucVersjon = bucVersjon;
    }

    @java.lang.SuppressWarnings("all")
    public void setParticipants(final Collection<Participant> participants) {
        this.participants = participants;
    }

    @java.lang.SuppressWarnings("all")
    public void setInternationalId(final String internationalId) {
        this.internationalId = internationalId;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof BUC)) return false;
        final BUC other = (BUC) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$id = this.getId();
        final java.lang.Object other$id = other.getId();
        if (this$id == null ? other$id != null : !this$id.equals(other$id)) return false;
        final java.lang.Object this$startDate = this.getStartDate();
        final java.lang.Object other$startDate = other.getStartDate();
        if (this$startDate == null ? other$startDate != null : !this$startDate.equals(other$startDate)) return false;
        final java.lang.Object this$lastUpdate = this.getLastUpdate();
        final java.lang.Object other$lastUpdate = other.getLastUpdate();
        if (this$lastUpdate == null ? other$lastUpdate != null : !this$lastUpdate.equals(other$lastUpdate)) return false;
        final java.lang.Object this$status = this.getStatus();
        final java.lang.Object other$status = other.getStatus();
        if (this$status == null ? other$status != null : !this$status.equals(other$status)) return false;
        final java.lang.Object this$creator = this.getCreator();
        final java.lang.Object other$creator = other.getCreator();
        if (this$creator == null ? other$creator != null : !this$creator.equals(other$creator)) return false;
        final java.lang.Object this$documents = this.getDocuments();
        final java.lang.Object other$documents = other.getDocuments();
        if (this$documents == null ? other$documents != null : !this$documents.equals(other$documents)) return false;
        final java.lang.Object this$actions = this.getActions();
        final java.lang.Object other$actions = other.getActions();
        if (this$actions == null ? other$actions != null : !this$actions.equals(other$actions)) return false;
        final java.lang.Object this$bucType = this.getBucType();
        final java.lang.Object other$bucType = other.getBucType();
        if (this$bucType == null ? other$bucType != null : !this$bucType.equals(other$bucType)) return false;
        final java.lang.Object this$bucVersjon = this.getBucVersjon();
        final java.lang.Object other$bucVersjon = other.getBucVersjon();
        if (this$bucVersjon == null ? other$bucVersjon != null : !this$bucVersjon.equals(other$bucVersjon)) return false;
        final java.lang.Object this$participants = this.getParticipants();
        final java.lang.Object other$participants = other.getParticipants();
        if (this$participants == null ? other$participants != null : !this$participants.equals(other$participants)) return false;
        final java.lang.Object this$internationalId = this.getInternationalId();
        final java.lang.Object other$internationalId = other.getInternationalId();
        if (this$internationalId == null ? other$internationalId != null : !this$internationalId.equals(other$internationalId)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof BUC;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $id = this.getId();
        result = result * PRIME + ($id == null ? 43 : $id.hashCode());
        final java.lang.Object $startDate = this.getStartDate();
        result = result * PRIME + ($startDate == null ? 43 : $startDate.hashCode());
        final java.lang.Object $lastUpdate = this.getLastUpdate();
        result = result * PRIME + ($lastUpdate == null ? 43 : $lastUpdate.hashCode());
        final java.lang.Object $status = this.getStatus();
        result = result * PRIME + ($status == null ? 43 : $status.hashCode());
        final java.lang.Object $creator = this.getCreator();
        result = result * PRIME + ($creator == null ? 43 : $creator.hashCode());
        final java.lang.Object $documents = this.getDocuments();
        result = result * PRIME + ($documents == null ? 43 : $documents.hashCode());
        final java.lang.Object $actions = this.getActions();
        result = result * PRIME + ($actions == null ? 43 : $actions.hashCode());
        final java.lang.Object $bucType = this.getBucType();
        result = result * PRIME + ($bucType == null ? 43 : $bucType.hashCode());
        final java.lang.Object $bucVersjon = this.getBucVersjon();
        result = result * PRIME + ($bucVersjon == null ? 43 : $bucVersjon.hashCode());
        final java.lang.Object $participants = this.getParticipants();
        result = result * PRIME + ($participants == null ? 43 : $participants.hashCode());
        final java.lang.Object $internationalId = this.getInternationalId();
        result = result * PRIME + ($internationalId == null ? 43 : $internationalId.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "BUC(id=" + this.getId() + ", startDate=" + this.getStartDate() + ", lastUpdate=" + this.getLastUpdate() + ", status=" + this.getStatus() + ", creator=" + this.getCreator() + ", documents=" + this.getDocuments() + ", actions=" + this.getActions() + ", bucType=" + this.getBucType() + ", bucVersjon=" + this.getBucVersjon() + ", participants=" + this.getParticipants() + ", internationalId=" + this.getInternationalId() + ")";
    }
}
