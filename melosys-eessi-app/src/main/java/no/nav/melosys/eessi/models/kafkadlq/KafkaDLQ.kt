// Generated by delombok at Thu Jul 04 12:27:09 CEST 2024
package no.nav.melosys.eessi.models.kafkadlq;

import java.time.LocalDateTime;
import java.util.UUID;
import jakarta.persistence.*;

import com.fasterxml.jackson.core.JsonProcessingException;

@Entity
@Inheritance(strategy = InheritanceType.SINGLE_TABLE)
@DiscriminatorColumn(name = "queue_type", discriminatorType = DiscriminatorType.STRING)
@Table(name = "kafka_dlq")
public abstract class KafkaDLQ {
    @Id
    @Column(name = "id")
    private UUID id;
    @Enumerated(EnumType.STRING)
    @Column(name = "queue_type", insertable = false, updatable = false)
    private QueueType queueType;
    @Column(name = "tid_registrert")
    private LocalDateTime tidRegistrert;
    @Column(name = "tid_sist_rekjort")
    private LocalDateTime tidSistRekjort;
    @Column(name = "siste_feilmelding")
    private String sisteFeilmelding;
    @Column(name = "antall_rekjoringer")
    private int antallRekjoringer;
    @Column(name = "skip")
    private Boolean skip = false;

    public void økAntallRekjøringerMed1() {
        antallRekjoringer++;
    }

    public abstract String hentMeldingSomStreng() throws JsonProcessingException;

    @java.lang.SuppressWarnings("all")
    public UUID getId() {
        return this.id;
    }

    @java.lang.SuppressWarnings("all")
    public QueueType getQueueType() {
        return this.queueType;
    }

    @java.lang.SuppressWarnings("all")
    public LocalDateTime getTidRegistrert() {
        return this.tidRegistrert;
    }

    @java.lang.SuppressWarnings("all")
    public LocalDateTime getTidSistRekjort() {
        return this.tidSistRekjort;
    }

    @java.lang.SuppressWarnings("all")
    public String getSisteFeilmelding() {
        return this.sisteFeilmelding;
    }

    @java.lang.SuppressWarnings("all")
    public int getAntallRekjoringer() {
        return this.antallRekjoringer;
    }

    @java.lang.SuppressWarnings("all")
    public Boolean getSkip() {
        return this.skip;
    }

    @java.lang.SuppressWarnings("all")
    public void setId(final UUID id) {
        this.id = id;
    }

    @java.lang.SuppressWarnings("all")
    public void setQueueType(final QueueType queueType) {
        this.queueType = queueType;
    }

    @java.lang.SuppressWarnings("all")
    public void setTidRegistrert(final LocalDateTime tidRegistrert) {
        this.tidRegistrert = tidRegistrert;
    }

    @java.lang.SuppressWarnings("all")
    public void setTidSistRekjort(final LocalDateTime tidSistRekjort) {
        this.tidSistRekjort = tidSistRekjort;
    }

    @java.lang.SuppressWarnings("all")
    public void setSisteFeilmelding(final String sisteFeilmelding) {
        this.sisteFeilmelding = sisteFeilmelding;
    }

    @java.lang.SuppressWarnings("all")
    public void setAntallRekjoringer(final int antallRekjoringer) {
        this.antallRekjoringer = antallRekjoringer;
    }

    @java.lang.SuppressWarnings("all")
    public void setSkip(final Boolean skip) {
        this.skip = skip;
    }

    @java.lang.SuppressWarnings("all")
    public KafkaDLQ() {
    }

    @java.lang.SuppressWarnings("all")
    public KafkaDLQ(final UUID id, final QueueType queueType, final LocalDateTime tidRegistrert, final LocalDateTime tidSistRekjort, final String sisteFeilmelding, final int antallRekjoringer, final Boolean skip) {
        this.id = id;
        this.queueType = queueType;
        this.tidRegistrert = tidRegistrert;
        this.tidSistRekjort = tidSistRekjort;
        this.sisteFeilmelding = sisteFeilmelding;
        this.antallRekjoringer = antallRekjoringer;
        this.skip = skip;
    }
}
