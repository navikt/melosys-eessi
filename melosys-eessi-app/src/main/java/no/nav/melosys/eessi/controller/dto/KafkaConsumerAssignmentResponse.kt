// Generated by delombok at Thu Jul 04 12:27:09 CEST 2024
package no.nav.melosys.eessi.controller.dto;

import com.fasterxml.jackson.annotation.JsonInclude;

@JsonInclude(JsonInclude.Include.NON_NULL)
public class KafkaConsumerAssignmentResponse {
    private final String topic;
    private final Integer partition;

    @java.lang.SuppressWarnings("all")
    KafkaConsumerAssignmentResponse(final String topic, final Integer partition) {
        this.topic = topic;
        this.partition = partition;
    }


    @java.lang.SuppressWarnings("all")
    public static class KafkaConsumerAssignmentResponseBuilder {
        @java.lang.SuppressWarnings("all")
        private String topic;
        @java.lang.SuppressWarnings("all")
        private Integer partition;

        @java.lang.SuppressWarnings("all")
        KafkaConsumerAssignmentResponseBuilder() {
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public KafkaConsumerAssignmentResponse.KafkaConsumerAssignmentResponseBuilder topic(final String topic) {
            this.topic = topic;
            return this;
        }

        /**
         * @return {@code this}.
         */
        @java.lang.SuppressWarnings("all")
        public KafkaConsumerAssignmentResponse.KafkaConsumerAssignmentResponseBuilder partition(final Integer partition) {
            this.partition = partition;
            return this;
        }

        @java.lang.SuppressWarnings("all")
        public KafkaConsumerAssignmentResponse build() {
            return new KafkaConsumerAssignmentResponse(this.topic, this.partition);
        }

        @java.lang.Override
        @java.lang.SuppressWarnings("all")
        public java.lang.String toString() {
            return "KafkaConsumerAssignmentResponse.KafkaConsumerAssignmentResponseBuilder(topic=" + this.topic + ", partition=" + this.partition + ")";
        }
    }

    @java.lang.SuppressWarnings("all")
    public static KafkaConsumerAssignmentResponse.KafkaConsumerAssignmentResponseBuilder builder() {
        return new KafkaConsumerAssignmentResponse.KafkaConsumerAssignmentResponseBuilder();
    }

    @java.lang.SuppressWarnings("all")
    public String getTopic() {
        return this.topic;
    }

    @java.lang.SuppressWarnings("all")
    public Integer getPartition() {
        return this.partition;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public boolean equals(final java.lang.Object o) {
        if (o == this) return true;
        if (!(o instanceof KafkaConsumerAssignmentResponse)) return false;
        final KafkaConsumerAssignmentResponse other = (KafkaConsumerAssignmentResponse) o;
        if (!other.canEqual((java.lang.Object) this)) return false;
        final java.lang.Object this$partition = this.getPartition();
        final java.lang.Object other$partition = other.getPartition();
        if (this$partition == null ? other$partition != null : !this$partition.equals(other$partition)) return false;
        final java.lang.Object this$topic = this.getTopic();
        final java.lang.Object other$topic = other.getTopic();
        if (this$topic == null ? other$topic != null : !this$topic.equals(other$topic)) return false;
        return true;
    }

    @java.lang.SuppressWarnings("all")
    protected boolean canEqual(final java.lang.Object other) {
        return other instanceof KafkaConsumerAssignmentResponse;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public int hashCode() {
        final int PRIME = 59;
        int result = 1;
        final java.lang.Object $partition = this.getPartition();
        result = result * PRIME + ($partition == null ? 43 : $partition.hashCode());
        final java.lang.Object $topic = this.getTopic();
        result = result * PRIME + ($topic == null ? 43 : $topic.hashCode());
        return result;
    }

    @java.lang.Override
    @java.lang.SuppressWarnings("all")
    public java.lang.String toString() {
        return "KafkaConsumerAssignmentResponse(topic=" + this.getTopic() + ", partition=" + this.getPartition() + ")";
    }
}
