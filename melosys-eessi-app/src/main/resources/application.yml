server:
  port: 8080

spring:
  application:
    name: melosys-eessi
  datasource:
    url: jdbc:postgresql://${PG_HOST}:5432/${DATABASE_NAME}
  jpa:
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true #fix for jdbc bug i postgres-driver som krasjer app
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        enable.idempotence: true

    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    properties:
      security.protocol: SASL_SSL
      sasl.mechanism: PLAIN
      sasl.jaas.config: org.apache.kafka.common.security.plain.PlainLoginModule required username="${melosys.systemuser.username}" password="${melosys.systemuser.password}";
      reconnect.backoff.ms: 1000

  servlet:
    multipart:
      max-file-size: 10485760 # 10MB
      max-request-size: 10485760 # 10MB

melosys:
  admin:
    api-key: ${MELOSYS_ADMIN_API_KEY}
  kafka:
    consumer:
      oppgave-endret:
        topic: ${KAFKA_OPPGAVE_ENDRET_TOPIC:oppgave-endret}
        groupid: ${KAFKA_OPPGAVE_GROUPID:melosys-eessi-oppgaveHendelser}
    aiven:
      brokers: ${KAFKA_BROKERS}
      keystorePath: ${KAFKA_KEYSTORE_PATH:/dev/zero}
      truststorePath: ${KAFKA_TRUSTSTORE_PATH:/dev/zero}
      credstorePassword: ${KAFKA_CREDSTORE_PASSWORD:pwd}
      producer:
        aiven-topic-name: ${KAFKA_AIVEN_EESSIMELDING_TOPIC:teammelosys.eessi.v1}
      consumer:
        mottatt:
          groupid: ${KAFKA_AIVEN_SEDHENDELSER_MOTTATT_GROUPID:melosys-eessi-sedHendelser-aiven}
          topic: ${KAFKA_AIVEN_SEDMOTTATT_TOPIC:eessibasis-sedmottatt-v1}
        sendt:
          groupid: ${KAFKA_AIVEN_SEDHENDELSER_SENDT_GROUPID:melosys-eessi-sedHendelser-aiven}
          topic: ${KAFKA_AIVEN_SEDSENDT_TOPIC:eessibasis-sedsendt-v1}
        oppgave:
          hendelse:
            groupid: ${KAFKA_AIVEN_OPPGAVE_HENDELSE_GROUPID:melosys-eessi-oppgaveHendelser-aiven}
            topic: ${KAFKA_AIVEN_OPPGAVE_HENDELSE_TOPIC:oppgavehandtering.oppgavehendelse-v1}
  systemuser:
    username: ${SRV_USERNAME}
    password: ${SRV_PASSWORD}
  integrations:
    euxapp-url: ${EUXAPP_URL}
    euxapp-rinasaker-url: ${EUXAPP_RINASAKER_URL}
    reststs-url: ${RESTSTS_URL}
    rina-host-url: ${RINA_HOST_URL}
    journalpostapi-url: ${JOURNALPOSTAPI_URL}

    saf-url: ${SAF_URL}
    pdl-url: ${PDL_URL}
    pdl-web-url: ${PDL_WEB_URL}
    gsak:
      sak-url: ${SAK_URL}
      oppgave-url: ${OPPGAVE_URL}

rina:
  institusjon-id: ${RINA_INSTITUSJON_ID}

management:
  metrics:
    web:
      server:
        auto-time-requests: true
    enable:
      jvm:
        threads.peak: false
        threads.deamon: false
        classes.loaded: false
        classes.unloaded: false
      process.start.time: false
  endpoints:
    web:
      exposure:
        include: health,prometheus,logging
      base-path: /internal

#Token-validering
no.nav.security.jwt.issuer:
  reststs:
    discovery-url: ${RESTSTS_URL}/.well-known/openid-configuration
    accepted-audience: srvmelosys
  aad:
    discovery-url: ${AZURE_APP_WELL_KNOWN_URL}
    accepted-audience: ${AZURE_APP_CLIENT_ID}

no.nav.security.jwt.client.registration:
  eux-rina-api:
    token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
    grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
    scope: ${EUX_RINA_API_SCOPE}
    authentication:
      client-id: ${AZURE_APP_CLIENT_ID}
      client-secret: ${AZURE_APP_CLIENT_SECRET}
      client-auth-method: client_secret_basic
  eux-nav-rinasak:
    token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
    grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
    scope: ${EUX_NAV_RINASAK_SCOPE}
    authentication:
      client-id: ${AZURE_APP_CLIENT_ID}
      client-secret: ${AZURE_APP_CLIENT_SECRET}
      client-auth-method: client_secret_basic
  pdl-web:
    token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
    grant-type: client_credentials
    scope: ${PDL_WEB_SCOPE}
    authentication:
      client-id: ${AZURE_APP_CLIENT_ID}
      client-secret: ${AZURE_APP_CLIENT_SECRET}
      client-auth-method: client_secret_basic
  pdl:
    token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
    grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
    scope: ${PDL_SCOPE}
    authentication:
      client-id: ${AZURE_APP_CLIENT_ID}
      client-secret: ${AZURE_APP_CLIENT_SECRET}
      client-auth-method: client_secret_basic
  oppgave-sak:
    token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
    grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
    scope: ${OPPGAVE_API_SCOPE}
    authentication:
      client-id: ${AZURE_APP_CLIENT_ID}
      client-secret: ${AZURE_APP_CLIENT_SECRET}
      client-auth-method: client_secret_basic
  saf:
    token-endpoint-url: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
    grant-type: urn:ietf:params:oauth:grant-type:jwt-bearer
    scope: ${SAF_SCOPE}
    authentication:
      client-id: ${AZURE_APP_CLIENT_ID}
      client-secret: ${AZURE_APP_CLIENT_SECRET}
      client-auth-method: client_secret_basic

unleash:
  token: ${UNLEASH_SERVER_API_TOKEN}
